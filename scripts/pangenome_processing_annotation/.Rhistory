rm(list=ls())
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir ='/stor/work/Ochman/alex/captive_ape_strain_genomes')
library(ape)
library(treeio)
library(ggtree)
library(estimatr)
library(tidyverse)
library(seqinr)
library(stringr)
library(cowplot)
library(harrietr)
library(vegan)
library(data.table)
runCount <- function(species,gain_penalty) {
dir = file.path('results/pangenome',species)
tree_file = file.path(dir,paste0(species,'.tre'))
pres_abs_file = file.path(dir,"roary_nosplitparalogs/gene_presence_absence.csv")
count_outdir = file.path('results/pangenome',species,'gene_gain_loss/count')
dir.create(count_outdir,recursive = T)
#add nodelabel to tree and output to count folder
tree <- read.tree(tree_file)
tree <- makeNodeLabel(tree)
count_tree_file = file.path(count_outdir,paste0('count_',species,'.tre'))
write.tree(tree,file=count_tree_file)
#format pres abs table for count
pres_abs <- read_csv(pres_abs_file, col_types = cols())
colnames(pres_abs) <- stringr::str_replace_all(colnames(pres_abs),'[_-]','.')
isblank <-  function(x) {
gene_count = as.numeric(str_count(x, pattern = "_"))
gene_count = if_else(is.na(gene_count),0,gene_count)
}
pres_abs <- pres_abs %>%
select(Gene,all_of(tree$tip.label))  %>%
mutate_at(vars(-Gene),isblank)
count_pres_abs_file = file.path(count_outdir,'count_pres_abs.txt')
write_tsv(pres_abs,file=count_pres_abs_file)
#run count
count_outfile = file.path(count_outdir,paste0('countOutput_',species,'_gainpenalty',gain_penalty))
print(count_outfile)
system(paste('java -Xmx2048M -cp bin/Count/Count.jar ca.umontreal.iro.evolution.genecontent.AsymmetricWagner -gain ',
gain_penalty,
count_tree_file,
count_pres_abs_file, '>',
count_outfile,sep=' '))
system(paste0("grep '# CHANGE' ",count_outfile," | sed 's/# //' > ",count_outfile,".CHANGE"))
system(paste0("grep '# PRESENT' ",count_outfile," | sed 's/# //' > ",count_outfile,".PRESENT"))
system(paste0("grep '# FAMILY' ",count_outfile," | sed 's/# //' > ",count_outfile,".FAMILY"))
family <- read_tsv(paste0(count_outfile,".FAMILY"),col_types = cols()) %>%
dplyr::rename('Gene'='name') %>%
select(-FAMILY)
write_tsv(family,paste0(count_outfile,".FAMILY"))
present <- read.table(paste0(output,".PRESENT"),sep='\t',header=TRUE)
res <- present %>%
mutate(istip = if_else(node %in% metadata$isolate,'tip','node')) %>%
rstatix::kruskal_test(genes ~ istip)
}
#runCount('Bacteroides_xylanisolvens', 1)
runCount('Bacteroides_xylanisolvens', 2)
